package org.example.model;

// These imports gives access to JPA annotations and Java's date class.
import jakarta.persistence.*;
import java.time.LocalDate;

/**
 * Domain model representing a client's personal profile linked to a financial account.
 * <p>
 * This model includes sensitive Personally Identifiable Information (PII) and is
 * subject to strict access control, encryption policies, and audit trail requirements.
 * <p>
 * A {ClientProfile} is uniquely associated with an { AccountModel} through
 * a one-to-one relationship and stores data such as contact info, national ID, income, etc.
 *
 * <b>Compliance:</b> Fields like email, national ID, and address should never be exposed
 * directly in logs or unsecured views. Usage of field-level encryption may be considered.
 *
 * <b>Storage:</b> Managed via JPA and persisted in a relational database.
 *
 * @author Rafael Besparas
 */

@Entity
// This annotation tells Java to map this class to a database table called client_profile
public class ClientProfile {

    // Use the ID to say that this is the Primary key for this table
    @Id
    // Also use the auto generate to make the database autogenerate this value in the database
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    // This is the unique ID for each profile, auto-generated by the database
    private Long id;

    // Personal Information Fields PII must be handled under the GDPR

    // First name of the client
    private String firstName;
    // Last name of the client
    private String lastName;
    // Client's date of birth
    private LocalDate dateOfBirth;
    // National ID (e.g., Social Security Number or Passport). Sensitive PII
    private String nationalId;
    // Residential address of the client
    private String address;
    // Email address used for notifications and contact.
    private String email;
    // Mobile phone number
    private String phone;
    // Client's declared employment status
    private String employmentStatus;
    // Annual income of the client. Used for risk profiling and eligibility
    private Double annualIncome;
    // Path to profile photo, if uploaded. Stored as a URI or file reference
    private String profilePhotoPath;


    /**
     * Link back to the owning account.
     * This enforces a one-to-one relationship with {@link AccountModel}.
     */
    // This tells the database that the Each profile belongs exactly to one account
    @OneToOne
    // This also tells the JPA column to store the foreign key in the client Profile table
    @JoinColumn(name = "account_id")
    private AccountModel account;

    // Getters and setters for the PII

    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }

    public String getFirstName() { return firstName; }
    public void setFirstName(String firstName) { this.firstName = firstName; }

    public String getLastName() { return lastName; }
    public void setLastName(String lastName) { this.lastName = lastName; }

    public LocalDate getDateOfBirth() { return dateOfBirth; }
    public void setDateOfBirth(LocalDate dateOfBirth) { this.dateOfBirth = dateOfBirth; }

    public String getNationalId() { return nationalId; }
    public void setNationalId(String nationalId) { this.nationalId = nationalId; }

    public String getAddress() { return address; }
    public void setAddress(String address) { this.address = address; }

    public String getEmail() { return email; }
    public void setEmail(String email) { this.email = email; }

    public String getPhone() { return phone; }
    public void setPhone(String phone) { this.phone = phone; }

    public String getEmploymentStatus() { return employmentStatus; }
    public void setEmploymentStatus(String employmentStatus) { this.employmentStatus = employmentStatus; }

    public Double getAnnualIncome() { return annualIncome; }
    public void setAnnualIncome(Double annualIncome) { this.annualIncome = annualIncome; }

    public String getProfilePhotoPath() { return profilePhotoPath; }
    public void setProfilePhotoPath(String profilePhotoPath) { this.profilePhotoPath = profilePhotoPath; }

    public AccountModel getAccount() { return account; }
    public void setAccount(AccountModel account) { this.account = account; }
}
