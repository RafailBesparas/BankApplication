name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint:
    name: Lint Java Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run Checkstyle
        run: mvn checkstyle:check

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run Tests
        run: mvn test

  build:
    name: Build JAR Package
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
      - name: Build Project
        run: mvn package -DskipTests

  dockerize:
    name: Dockerize App
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/banking-app:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/banking-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/banking-app:latest
      - name: Push Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/banking-app:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/banking-app:latest

  deploy:
    name: Deploy to Production Server
    runs-on: ubuntu-latest
    needs: [dockerize]
    environment:
      name: production
      url: ${{ secrets.PRODUCTION_URL }}
    steps:
      - name: SSH & Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/banking-app:latest
            docker stop bank || true && docker rm bank || true
            docker run -d --name bank -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/banking-app:latest
